name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  macos_big_sur:
    runs-on: macos-11.0

    strategy:
      matrix:
        xcode:
          - "11.7" # Swift 5.2
          - "12.2" # Swift 5.3

    name: "macOS Big Sur (Xcode ${{ matrix.xcode }})"

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-spm-xcode-${{ matrix.xcode }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-xcode-${{ matrix.xcode }}-
      - name: Install System Dependencies
        run: |
          brew install graphviz
      - name: Build and Test
        run: |
          swift test -c release
        env:
          DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer

  macos_catalina:
    runs-on: macos-10.15

    strategy:
      matrix:
        xcode:
          - "11.7" # Swift 5.2
          - "12" # Swift 5.3

    name: "macOS Catalina (Xcode ${{ matrix.xcode }})"

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-spm-xcode-${{ matrix.xcode }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-xcode-${{ matrix.xcode }}-
      - name: Install System Dependencies
        run: |
          brew install graphviz
      - name: Build and Test
        run: |
          swift test -c release
        env:
          DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer

  linux:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        swift: ["5.3", "5.2"]

    name: "Linux (Swift ${{ matrix.swift }})"

    container:
      image: swift:${{ matrix.swift }}

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - uses: actions/cache@v2
        with:
          path: .build
          key: ${{ runner.os }}-spm-swift-${{ matrix.swift }}-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-swift-${{ matrix.swift }}-
      - name: Install System Dependencies
        run: |
          apt-get update
          apt-get install -y libxml2-dev graphviz
      - name: Build and Test
        run: swift test -c release --enable-test-discovery

  validate-assets:
    runs-on: ubuntu-latest

    name: "Validate Assets"

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install node dependencies
        run: |
          cd .node
          npm install
      - name: Test assets
        run: |
          cd .node
          OLD=`cksum ../Resources/all.min.css`
          npm run build
          NEW=`cksum ../Resources/all.min.css`
          if [[ "$OLD" != "$NEW" ]]; then
            echo "Regenerated assets differ from committed version"
            exit -1
          fi
